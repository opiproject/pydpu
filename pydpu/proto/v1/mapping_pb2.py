# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mapping.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import object_key_pb2 as object__key__pb2
import networktypes_pb2 as networktypes__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rmapping.proto\x12\x1eopi_api.network.cloud.v1alpha1\x1a\x10object_key.proto\x1a\x12networktypes.proto\"\x83\x01\n\x07Mapping\x12\x39\n\x04spec\x18\x01 \x01(\x0b\x32+.opi_api.network.cloud.v1alpha1.MappingSpec\x12=\n\x06status\x18\x02 \x01(\x0b\x32-.opi_api.network.cloud.v1alpha1.MappingStatus\"\xf7\x04\n\x0bMappingSpec\x12(\n\x02id\x18\x01 \x01(\x0b\x32\x1c.opi_api.common.v1.ObjectKey\x12>\n\x06ip_key\x18\x02 \x01(\x0b\x32,.opi_api.network.cloud.v1alpha1.L3MappingKeyH\x00\x12?\n\x07mac_key\x18\x03 \x01(\x0b\x32,.opi_api.network.cloud.v1alpha1.L2MappingKeyH\x00\x12/\n\tsubnet_id\x18\x04 \x01(\x0b\x32\x1c.opi_api.common.v1.ObjectKey\x12/\n\x07vnic_id\x18\x05 \x01(\x0b\x32\x1c.opi_api.common.v1.ObjectKeyH\x01\x12\x31\n\ttunnel_id\x18\x06 \x01(\x0b\x32\x1c.opi_api.common.v1.ObjectKeyH\x01\x12\x33\n\x0bnh_group_id\x18\x07 \x01(\x0b\x32\x1c.opi_api.common.v1.ObjectKeyH\x01\x12\x10\n\x08mac_addr\x18\x08 \x01(\x0c\x12;\n\x05\x65ncap\x18\t \x01(\x0b\x32,.opi_api.network.opinetcommon.v1alpha1.Encap\x12\x43\n\tpublic_ip\x18\n \x01(\x0b\x32\x30.opi_api.network.opinetcommon.v1alpha1.IPAddress\x12\x0c\n\x04tags\x18\x0b \x03(\r\x12\x39\n\x04type\x18\x0c \x01(\x0e\x32+.opi_api.network.cloud.v1alpha1.MappingTypeB\x0b\n\tmac_or_ipB\t\n\x07\x64stinfo\"\xc0\x02\n\rMappingStatus\x12\x18\n\x10public_nat_index\x18\x01 \x01(\x05\x12\x19\n\x11private_nat_index\x18\x02 \x01(\x05\x12\x43\n\ttunnel_ip\x18\x03 \x03(\x0b\x32\x30.opi_api.network.opinetcommon.v1alpha1.IPAddress\x12O\n\x16svc_port_map_hw_handle\x18\x04 \x01(\x0b\x32/.opi_api.network.opinetcommon.v1alpha1.HwHandle\x12M\n\x14vnf_tunnel_hw_handle\x18\x05 \x01(\x0b\x32/.opi_api.network.opinetcommon.v1alpha1.HwHandle\x12\x15\n\rrewrite_index\x18\x06 \x01(\x05\"\x82\x01\n\x0cL3MappingKey\x12,\n\x06vpc_id\x18\x01 \x01(\x0b\x32\x1c.opi_api.common.v1.ObjectKey\x12\x44\n\nip_address\x18\x02 \x01(\x0b\x32\x30.opi_api.network.opinetcommon.v1alpha1.IPAddress\"T\n\x0cL2MappingKey\x12/\n\tsubnet_id\x18\x01 \x01(\x0b\x32\x1c.opi_api.common.v1.ObjectKey\x12\x13\n\x0bmac_address\x18\x02 \x01(\x0c\"\xbe\x03\n\x13MappingLookupFilter\x12\r\n\x05local\x18\x01 \x01(\x08\x12@\n\x08key_type\x18\x02 \x01(\x0e\x32..opi_api.network.cloud.v1alpha1.MappingKeyType\x12\x39\n\x04type\x18\x03 \x01(\x0e\x32+.opi_api.network.cloud.v1alpha1.MappingType\x12>\n\x06ip_key\x18\x04 \x01(\x0b\x32,.opi_api.network.cloud.v1alpha1.L3MappingKeyH\x00\x12?\n\x07mac_key\x18\x05 \x01(\x0b\x32,.opi_api.network.cloud.v1alpha1.L2MappingKeyH\x00\x12\x46\n\nip_address\x18\x06 \x01(\x0b\x32\x30.opi_api.network.opinetcommon.v1alpha1.IPAddressH\x00\x12\x15\n\x0bmac_address\x18\x07 \x01(\x0cH\x00\x12.\n\x06vpc_id\x18\x08 \x01(\x0b\x32\x1c.opi_api.common.v1.ObjectKeyH\x00\x42\x0b\n\tip_or_mac*t\n\x0bMappingType\x12\x1c\n\x18MAPPING_TYPE_UNSPECIFIED\x10\x00\x12\x14\n\x10MAPPING_TYPE_VPC\x10\x01\x12\x18\n\x14MAPPING_TYPE_SERVICE\x10\x02\x12\x17\n\x13MAPPING_TYPE_LB_VIP\x10\x03*d\n\x0eMappingKeyType\x12 \n\x1cMAPPING_KEY_TYPE_UNSPECIFIED\x10\x00\x12\x17\n\x13MAPPING_KEY_TYPE_L2\x10\x01\x12\x17\n\x13MAPPING_KEY_TYPE_L3\x10\x02\x42m\n\x1eopi_api.network.cloud.v1alpha1B\x0cMappingProtoP\x01Z;github.com/opiproject/opi-api/network/cloud/v1alpha1/gen/gob\x06proto3')

_MAPPINGTYPE = DESCRIPTOR.enum_types_by_name['MappingType']
MappingType = enum_type_wrapper.EnumTypeWrapper(_MAPPINGTYPE)
_MAPPINGKEYTYPE = DESCRIPTOR.enum_types_by_name['MappingKeyType']
MappingKeyType = enum_type_wrapper.EnumTypeWrapper(_MAPPINGKEYTYPE)
MAPPING_TYPE_UNSPECIFIED = 0
MAPPING_TYPE_VPC = 1
MAPPING_TYPE_SERVICE = 2
MAPPING_TYPE_LB_VIP = 3
MAPPING_KEY_TYPE_UNSPECIFIED = 0
MAPPING_KEY_TYPE_L2 = 1
MAPPING_KEY_TYPE_L3 = 2


_MAPPING = DESCRIPTOR.message_types_by_name['Mapping']
_MAPPINGSPEC = DESCRIPTOR.message_types_by_name['MappingSpec']
_MAPPINGSTATUS = DESCRIPTOR.message_types_by_name['MappingStatus']
_L3MAPPINGKEY = DESCRIPTOR.message_types_by_name['L3MappingKey']
_L2MAPPINGKEY = DESCRIPTOR.message_types_by_name['L2MappingKey']
_MAPPINGLOOKUPFILTER = DESCRIPTOR.message_types_by_name['MappingLookupFilter']
Mapping = _reflection.GeneratedProtocolMessageType('Mapping', (_message.Message,), {
  'DESCRIPTOR' : _MAPPING,
  '__module__' : 'mapping_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.cloud.v1alpha1.Mapping)
  })
_sym_db.RegisterMessage(Mapping)

MappingSpec = _reflection.GeneratedProtocolMessageType('MappingSpec', (_message.Message,), {
  'DESCRIPTOR' : _MAPPINGSPEC,
  '__module__' : 'mapping_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.cloud.v1alpha1.MappingSpec)
  })
_sym_db.RegisterMessage(MappingSpec)

MappingStatus = _reflection.GeneratedProtocolMessageType('MappingStatus', (_message.Message,), {
  'DESCRIPTOR' : _MAPPINGSTATUS,
  '__module__' : 'mapping_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.cloud.v1alpha1.MappingStatus)
  })
_sym_db.RegisterMessage(MappingStatus)

L3MappingKey = _reflection.GeneratedProtocolMessageType('L3MappingKey', (_message.Message,), {
  'DESCRIPTOR' : _L3MAPPINGKEY,
  '__module__' : 'mapping_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.cloud.v1alpha1.L3MappingKey)
  })
_sym_db.RegisterMessage(L3MappingKey)

L2MappingKey = _reflection.GeneratedProtocolMessageType('L2MappingKey', (_message.Message,), {
  'DESCRIPTOR' : _L2MAPPINGKEY,
  '__module__' : 'mapping_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.cloud.v1alpha1.L2MappingKey)
  })
_sym_db.RegisterMessage(L2MappingKey)

MappingLookupFilter = _reflection.GeneratedProtocolMessageType('MappingLookupFilter', (_message.Message,), {
  'DESCRIPTOR' : _MAPPINGLOOKUPFILTER,
  '__module__' : 'mapping_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.cloud.v1alpha1.MappingLookupFilter)
  })
_sym_db.RegisterMessage(MappingLookupFilter)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\036opi_api.network.cloud.v1alpha1B\014MappingProtoP\001Z;github.com/opiproject/opi-api/network/cloud/v1alpha1/gen/go'
  _MAPPINGTYPE._serialized_start=1846
  _MAPPINGTYPE._serialized_end=1962
  _MAPPINGKEYTYPE._serialized_start=1964
  _MAPPINGKEYTYPE._serialized_end=2064
  _MAPPING._serialized_start=88
  _MAPPING._serialized_end=219
  _MAPPINGSPEC._serialized_start=222
  _MAPPINGSPEC._serialized_end=853
  _MAPPINGSTATUS._serialized_start=856
  _MAPPINGSTATUS._serialized_end=1176
  _L3MAPPINGKEY._serialized_start=1179
  _L3MAPPINGKEY._serialized_end=1309
  _L2MAPPINGKEY._serialized_start=1311
  _L2MAPPINGKEY._serialized_end=1395
  _MAPPINGLOOKUPFILTER._serialized_start=1398
  _MAPPINGLOOKUPFILTER._serialized_end=1844
# @@protoc_insertion_point(module_scope)
