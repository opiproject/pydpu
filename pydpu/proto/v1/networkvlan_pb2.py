# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: networkvlan.proto
# Protobuf Python Version: 4.25.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11networkvlan.proto\x12%opi_api.network.opinetcommon.v1alpha1\"\xdb\x01\n\x13SwitchedVlanSetting\x12\x61\n\x13vlan_interface_mode\x18\x01 \x01(\x0e\x32\x31.opi_api.network.opinetcommon.v1alpha1.VlanIfModeR\x11vlanInterfaceMode\x12\x1f\n\x0bnative_vlan\x18\x02 \x01(\rR\nnativeVlan\x12\x1f\n\x0b\x61\x63\x63\x65ss_vlan\x18\x03 \x01(\rR\naccessVlan\x12\x1f\n\x0btrunk_vlans\x18\x04 \x01(\tR\ntrunkVlans\"\xb6\x01\n\x0eVlanSwitchedIf\x12R\n\x06\x63onfig\x18\x01 \x01(\x0b\x32:.opi_api.network.opinetcommon.v1alpha1.SwitchedVlanSettingR\x06\x63onfig\x12P\n\x05state\x18\x02 \x01(\x0b\x32:.opi_api.network.opinetcommon.v1alpha1.SwitchedVlanSettingR\x05state\"\xdb\x01\n\x18VlanIngressEgressSetting\x12`\n\x0fvlanstackaction\x18\x01 \x01(\x0e\x32\x36.opi_api.network.opinetcommon.v1alpha1.VlanStackActionR\x0fvlanstackaction\x12\x17\n\x07vlan_id\x18\x02 \x01(\rR\x06vlanId\x12\x44\n\x04tpid\x18\x03 \x01(\x0e\x32\x30.opi_api.network.opinetcommon.v1alpha1.TpidTypesR\x04tpid\"\xac\x0c\n\x06VlanIf\x12M\n\x05match\x18\x01 \x01(\x0b\x32\x37.opi_api.network.opinetcommon.v1alpha1.VlanIf.VlanMatchR\x05match\x12h\n\x0eingressmapping\x18\x02 \x01(\x0b\x32@.opi_api.network.opinetcommon.v1alpha1.VlanIf.VlanIngressMappingR\x0eingressmapping\x12\x65\n\regressmapping\x18\x03 \x01(\x0b\x32?.opi_api.network.opinetcommon.v1alpha1.VlanIf.VlanEgressMappingR\regressmapping\x1a\xf4\x06\n\tVlanMatch\x12h\n\x0csingletagged\x18\x01 \x01(\x0b\x32\x44.opi_api.network.opinetcommon.v1alpha1.VlanIf.VlanMatch.SingleTaggedR\x0csingletagged\x12t\n\x10singletaggedlist\x18\x02 \x01(\x0b\x32H.opi_api.network.opinetcommon.v1alpha1.VlanIf.VlanMatch.SingleTaggedListR\x10singletaggedlist\x1a\xbe\x02\n\x0cSingleTagged\x12l\n\x06\x63onfig\x18\x01 \x01(\x0b\x32T.opi_api.network.opinetcommon.v1alpha1.VlanIf.VlanMatch.SingleTagged.SingleTagConfigR\x06\x63onfig\x12i\n\x05state\x18\x02 \x01(\x0b\x32S.opi_api.network.opinetcommon.v1alpha1.VlanIf.VlanMatch.SingleTagged.SingleTagStateR\x05state\x1a*\n\x0fSingleTagConfig\x12\x17\n\x07vlan_id\x18\x01 \x01(\rR\x06vlanId\x1a)\n\x0eSingleTagState\x12\x17\n\x07vlan_id\x18\x01 \x01(\rR\x06vlanId\x1a\xc5\x02\n\x10SingleTaggedList\x12n\n\x06\x63onfig\x18\x01 \x01(\x0b\x32V.opi_api.network.opinetcommon.v1alpha1.VlanIf.VlanMatch.SingleTaggedList.TagListConfigR\x06\x63onfig\x12n\n\x06status\x18\x02 \x01(\x0b\x32V.opi_api.network.opinetcommon.v1alpha1.VlanIf.VlanMatch.SingleTaggedList.TagListStatusR\x06status\x1a(\n\rTagListConfig\x12\x17\n\x07vlan_id\x18\x01 \x03(\rR\x06vlanId\x1a\'\n\rTagListStatus\x12\x16\n\x06vlanid\x18\x01 \x03(\rR\x06vlanid\x1a\xc4\x01\n\x12VlanIngressMapping\x12W\n\x06\x63onfig\x18\x01 \x01(\x0b\x32?.opi_api.network.opinetcommon.v1alpha1.VlanIngressEgressSettingR\x06\x63onfig\x12U\n\x05state\x18\x02 \x01(\x0b\x32?.opi_api.network.opinetcommon.v1alpha1.VlanIngressEgressSettingR\x05state\x1a\xc3\x01\n\x11VlanEgressMapping\x12W\n\x06\x63onfig\x18\x01 \x01(\x0b\x32?.opi_api.network.opinetcommon.v1alpha1.VlanIngressEgressSettingR\x06\x63onfig\x12U\n\x05state\x18\x02 \x01(\x0b\x32?.opi_api.network.opinetcommon.v1alpha1.VlanIngressEgressSettingR\x05state*\x97\x01\n\tTpidTypes\x12\x1a\n\x16TPID_TYPES_UNSPECIFIED\x10\x00\x12\x15\n\x11TPID_TYPES_0X8100\x10\x01\x12\x15\n\x11TPID_TYPES_0X88A8\x10\x02\x12\x15\n\x11TPID_TYPES_0X9100\x10\x03\x12\x15\n\x11TPID_TYPES_0X9200\x10\x04\x12\x12\n\x0eTPID_TYPES_ANY\x10\x05*\x87\x01\n\x0fVlanStackAction\x12!\n\x1dVLAN_STACK_ACTION_UNSPECIFIED\x10\x00\x12\x1a\n\x16VLAN_STACK_ACTION_PUSH\x10\x01\x12\x19\n\x15VLAN_STACK_ACTION_POP\x10\x02\x12\x1a\n\x16VLAN_STACK_ACTION_SWAP\x10\x03*[\n\nVlanIfMode\x12\x1c\n\x18VLAN_IF_MODE_UNSPECIFIED\x10\x00\x12\x17\n\x13VLAN_IF_MODE_ACCESS\x10\x01\x12\x16\n\x12VLAN_IF_MODE_TRUNK\x10\x02\x42\x7f\n%opi_api.network.opinetcommon.v1alpha1B\x10NetworkVlanProtoP\x01ZBgithub.com/opiproject/opi-api/network/opinetcommon/v1alpha1/gen/gob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'networkvlan_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n%opi_api.network.opinetcommon.v1alpha1B\020NetworkVlanProtoP\001ZBgithub.com/opiproject/opi-api/network/opinetcommon/v1alpha1/gen/go'
  _globals['_TPIDTYPES']._serialized_start=2273
  _globals['_TPIDTYPES']._serialized_end=2424
  _globals['_VLANSTACKACTION']._serialized_start=2427
  _globals['_VLANSTACKACTION']._serialized_end=2562
  _globals['_VLANIFMODE']._serialized_start=2564
  _globals['_VLANIFMODE']._serialized_end=2655
  _globals['_SWITCHEDVLANSETTING']._serialized_start=61
  _globals['_SWITCHEDVLANSETTING']._serialized_end=280
  _globals['_VLANSWITCHEDIF']._serialized_start=283
  _globals['_VLANSWITCHEDIF']._serialized_end=465
  _globals['_VLANINGRESSEGRESSSETTING']._serialized_start=468
  _globals['_VLANINGRESSEGRESSSETTING']._serialized_end=687
  _globals['_VLANIF']._serialized_start=690
  _globals['_VLANIF']._serialized_end=2270
  _globals['_VLANIF_VLANMATCH']._serialized_start=989
  _globals['_VLANIF_VLANMATCH']._serialized_end=1873
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED']._serialized_start=1227
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED']._serialized_end=1545
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED_SINGLETAGCONFIG']._serialized_start=1460
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED_SINGLETAGCONFIG']._serialized_end=1502
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED_SINGLETAGSTATE']._serialized_start=1504
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED_SINGLETAGSTATE']._serialized_end=1545
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST']._serialized_start=1548
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST']._serialized_end=1873
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST_TAGLISTCONFIG']._serialized_start=1792
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST_TAGLISTCONFIG']._serialized_end=1832
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST_TAGLISTSTATUS']._serialized_start=1834
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST_TAGLISTSTATUS']._serialized_end=1873
  _globals['_VLANIF_VLANINGRESSMAPPING']._serialized_start=1876
  _globals['_VLANIF_VLANINGRESSMAPPING']._serialized_end=2072
  _globals['_VLANIF_VLANEGRESSMAPPING']._serialized_start=2075
  _globals['_VLANIF_VLANEGRESSMAPPING']._serialized_end=2270
# @@protoc_insertion_point(module_scope)
